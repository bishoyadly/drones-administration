/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (6.6.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.musalasoft.dronesadministration.controller;

import com.musalasoft.dronesadministration.model.DroneModelDto;
import com.musalasoft.dronesadministration.model.ProblemDto;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.Parameter;
import io.swagger.v3.oas.annotations.enums.ParameterIn;
import io.swagger.v3.oas.annotations.media.ArraySchema;
import io.swagger.v3.oas.annotations.media.Content;
import io.swagger.v3.oas.annotations.media.Schema;
import io.swagger.v3.oas.annotations.responses.ApiResponse;
import io.swagger.v3.oas.annotations.tags.Tag;
import org.springframework.http.HttpStatus;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.context.request.NativeWebRequest;

import javax.annotation.Generated;
import javax.validation.Valid;
import javax.validation.constraints.NotNull;
import java.util.List;
import java.util.Optional;

@Generated(value = "org.openapitools.codegen.languages.SpringCodegen")
@Validated
@Tag(name = "Drone", description = "Drone API Endpoints")
public interface DroneApi {

    default Optional<NativeWebRequest> getRequest() {
        return Optional.empty();
    }

    /**
     * DELETE /drone/{droneSerialNumber} : Delete Drone By Serial Number
     * Delete Registered Drone By Serial Number
     *
     * @param droneSerialNumber Drone Serial Number (required)
     * @return No Content Success Response (status code 204)
     * or Drone Does Not Exist (status code 404)
     * or Bad Update Request (status code 400)
     */
    @Operation(
            operationId = "deleteDroneBySerialNumber",
            summary = "Delete Drone By Serial Number",
            description = "Delete Registered Drone By Serial Number",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "204", description = "No Content Success Response"),
                    @ApiResponse(responseCode = "404", description = "Drone Does Not Exist", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Update Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.DELETE,
            value = "/drone/{droneSerialNumber}",
            produces = {"application/json"}
    )
    default ResponseEntity<Object> deleteDroneBySerialNumber(
            @Parameter(name = "droneSerialNumber", description = "Drone Serial Number", required = true, in = ParameterIn.PATH) @PathVariable("droneSerialNumber") String droneSerialNumber
    ) {
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /drone/{droneSerialNumber} : Get Drone By Serial Number
     * Get Registered Drone Data By Serial Number
     *
     * @param droneSerialNumber Drone Serial Number (required)
     * @return Success Response (status code 200)
     * or Drone Does Not Exist (status code 404)
     * or Bad Update Request (status code 400)
     */
    @Operation(
            operationId = "getDroneBySerialNumber",
            summary = "Get Drone By Serial Number",
            description = "Get Registered Drone Data By Serial Number",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success Response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = DroneModelDto.class))
                    }),
                    @ApiResponse(responseCode = "404", description = "Drone Does Not Exist", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Update Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/drone/{droneSerialNumber}",
            produces = {"application/json"}
    )
    default ResponseEntity<Object> getDroneBySerialNumber(
            @Parameter(name = "droneSerialNumber", description = "Drone Serial Number", required = true, in = ParameterIn.PATH) @PathVariable("droneSerialNumber") String droneSerialNumber
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * GET /drone/availableForLoad : Get Drones Available For Load
     * Get Drones Available To Be Loaded With New Medications
     *
     * @param pageNumber (required)
     * @param pageSize   (required)
     * @return Success Response (status code 200)
     * or Bad Update Request (status code 400)
     */
    @Operation(
            operationId = "getDronesAvailableForLoading",
            summary = "Get Drones Available For Load",
            description = "Get Drones Available To Be Loaded With New Medications",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success Response", content = {
                            @Content(mediaType = "application/json", array = @ArraySchema(schema = @Schema(implementation = DroneModelDto.class)))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Update Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.GET,
            value = "/drone/availableForLoad",
            produces = {"application/json"}
    )
    default ResponseEntity<Object> getDronesAvailableForLoading(
            @NotNull @Parameter(name = "pageNumber", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "pageNumber", required = true) Integer pageNumber,
            @NotNull @Parameter(name = "pageSize", description = "", required = true, in = ParameterIn.QUERY) @Valid @RequestParam(value = "pageSize", required = true) Integer pageSize
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "[ { \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" }, { \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" } ]";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /drone/{droneSerialNumber}/load : Load Drone With Medications
     * Load Drone By Drone Serial Number With Medications By Medication Codes
     *
     * @param droneSerialNumber Drone Serial Number (required)
     * @param requestBody       Medication Codes List Request Body (required)
     * @return Success Response (status code 200)
     * or Drone Does Not Exist (status code 404)
     * or Bad Update Request (status code 400)
     */
    @Operation(
            operationId = "loadDroneWithMedications",
            summary = "Load Drone With Medications",
            description = "Load Drone By Drone Serial Number With Medications By Medication Codes",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success Response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = DroneModelDto.class))
                    }),
                    @ApiResponse(responseCode = "404", description = "Drone Does Not Exist", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Update Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.POST,
            value = "/drone/{droneSerialNumber}/load",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<Object> loadDroneWithMedications(
            @Parameter(name = "droneSerialNumber", description = "Drone Serial Number", required = true, in = ParameterIn.PATH) @PathVariable("droneSerialNumber") String droneSerialNumber,
            @Parameter(name = "request_body", description = "Medication Codes List Request Body", required = true) @Valid @RequestBody List<String> requestBody
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * POST /drone : Register Drone
     * Register New Drone
     *
     * @param droneModelDto Drone Registeration Request (required)
     * @return Success Registration Response (status code 200)
     * or Bad Registration Request (status code 400)
     */
    @Operation(
            operationId = "registerDrone",
            summary = "Register Drone",
            description = "Register New Drone",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success Registration Response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = DroneModelDto.class))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Registration Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.POST,
            value = "/drone",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<Object> registerDrone(
            @Parameter(name = "DroneModelDto", description = "Drone Registeration Request", required = true) @Valid @RequestBody DroneModelDto droneModelDto
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }


    /**
     * PUT /drone/{droneSerialNumber} : Update Registered Drone
     * Update Registered Drone Data
     *
     * @param droneSerialNumber Drone Serial Number (required)
     * @param droneModelDto     Update Registered Drone Request Body (required)
     * @return Success Update Response (status code 200)
     * or Drone Does Not Exist (status code 404)
     * or Bad Update Request (status code 400)
     */
    @Operation(
            operationId = "updateRegisteredDrone",
            summary = "Update Registered Drone",
            description = "Update Registered Drone Data",
            tags = {"Drone"},
            responses = {
                    @ApiResponse(responseCode = "200", description = "Success Update Response", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = DroneModelDto.class))
                    }),
                    @ApiResponse(responseCode = "404", description = "Drone Does Not Exist", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    }),
                    @ApiResponse(responseCode = "400", description = "Bad Update Request", content = {
                            @Content(mediaType = "application/json", schema = @Schema(implementation = ProblemDto.class))
                    })
            }
    )
    @RequestMapping(
            method = RequestMethod.PUT,
            value = "/drone/{droneSerialNumber}",
            produces = {"application/json"},
            consumes = {"application/json"}
    )
    default ResponseEntity<Object> updateRegisteredDrone(
            @Parameter(name = "droneSerialNumber", description = "Drone Serial Number", required = true, in = ParameterIn.PATH) @PathVariable("droneSerialNumber") String droneSerialNumber,
            @Parameter(name = "DroneModelDto", description = "Update Registered Drone Request Body", required = true) @Valid @RequestBody DroneModelDto droneModelDto
    ) {
        getRequest().ifPresent(request -> {
            for (MediaType mediaType : MediaType.parseMediaTypes(request.getHeader("Accept"))) {
                if (mediaType.isCompatibleWith(MediaType.valueOf("application/json"))) {
                    String exampleString = "{ \"MedicationModelList\" : [ { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" }, { \"weightInGram\" : 10, \"code\" : \"ABC_123\", \"imageUrl\" : \"https://imageurl.com\", \"name\" : \"Medicine-123_1mg\" } ], \"serialNumber\" : \"ABCD12345\", \"loadWeightLimitInGram\" : 300, \"batteryCapacityInPercentage\" : 100, \"model\" : \"HEAVY_WEIGHT\", \"state\" : \"DELIVERED\" }";
                    ApiUtil.setExampleResponse(request, "application/json", exampleString);
                    break;
                }
            }
        });
        return new ResponseEntity<>(HttpStatus.NOT_IMPLEMENTED);

    }

}
